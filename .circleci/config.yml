# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
    coveralls: coveralls/coveralls@1.0.6

#
# Define all executors in one place
# There will be little reuse of them between the jobs but definitions are
# in seperate section to avoid clutter when defining jobs
#
executors:
  gfortran7:
    docker:
      - image: mikolajkowalski/ubuntu-pfunit:7
  gfortran8:
    docker:
      - image: mikolajkowalski/ubuntu-pfunit:8
  gfortran9:
    docker:
      - image: mikolajkowalski/ubuntu-pfunit:9
  gfortran10:
    docker:
      - image: mikolajkowalski/ubuntu-pfunit:10

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build-and-test:
    parameters:
      exec:
        type: executor
    executor: << parameters.exec >>
    steps:
      - checkout
      - run: ./scripts/install_scone.sh
      - run: ./scripts/run_tests.sh
  # Build and tests SCONE, but fetches the pFUnit from Github
  # Also compile without OpenMP to see that it still works
  fetch-and-build:
        parameters:
          exec:
            type: executor
        executor: << parameters.exec >>
        steps:
          - run: pip install cpp-coveralls
          - checkout
          - run: mkdir Build
          - run: cmake -E chdir ./Build cmake .. -DEXTERNAL_PFUNIT=OFF -DOPENMP=OFF -DCOVERAGE=ON
          - run: make -C ./Build
          - run: ./scripts/run_tests.sh
          - run:
              name: process-coverage
              command: >
                cpp-coveralls
                -x f90 -x F90
                --exclude Apps
                --exclude Build/_deps
                --exclude Build/unit_tests
                --exclude Build/integration_tests
              when: on_success
  cream-test:
    docker:
      - image: python:3.8-slim
    steps:
      - checkout
      - run: ./scripts/install_cream.sh
      - run: ./scripts/test_cream.sh

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  scone-tests:
    jobs:
      - build-and-test:
          name: build-with-<< matrix.exec >>
          matrix:
            parameters:
              exec: [gfortran7, gfortran8, gfortran9, gfortran10]
      - fetch-and-build:
          name: build-with-fetched-pfunit
          exec: gfortran8
      - cream-test:
          name: test-python-utility
